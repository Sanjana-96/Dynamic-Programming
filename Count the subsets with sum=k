Given an array arr of non-negative integers and an integer target, the task is to count all subsets of the array whose sum is equal to the given target.
Input: arr[] = [5, 2, 3, 10, 6, 8], target = 10
Output: 3
Explanation: The subsets {5, 2, 3}, {2, 8}, and {10} sum up to the target 10.
Input: arr[] = [2, 5, 1, 4, 3], target = 10
Output: 3
Explanation: The subsets {2, 1, 4, 3}, {5, 1, 4}, and {2, 5, 3} sum up to the target 10.


class Solution {
public:
    int numSubseq(vector<int>& nums, int target) {
        int n=nums.size();
        vector<int>prev(target+1,0);
        vector<int>cur(target+1);

        cur[0]=prev[0]=1;
        if(nums[0]<=target) prev[nums[0]]=1;

        for(int i=1;i<n;i++){
            for(int t=0;t<=target;t++){
                int notTake=prev[t];
                int take=0;
                if(nums[i]<t) take=prev[t-nums[i]];
                cur[t]=notTake+take;
            }
            prev=cur;
        }
        return prev[target];
    }
};
